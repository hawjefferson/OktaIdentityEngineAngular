{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ɵɵngDeclareFactory, Injector, ɵɵFactoryTarget, ɵɵngDeclareComponent, ɵɵngDeclareClassMetadata, Component, Inject, Optional, ɵɵngDeclareInjectable, Injectable, TemplateRef, ViewContainerRef, ɵɵngDeclareDirective, Directive, Input, VERSION, ɵɵngDeclareNgModule, ɵɵngDeclareInjector, NgModule } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaAuth, AuthSdkError, toRelativeUrl } from '@okta/okta-auth-js';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { compare } from 'compare-versions';\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar OKTA_CONFIG = new InjectionToken('okta.config.angular');\nvar OKTA_AUTH = new InjectionToken('okta.auth');\nvar OktaCallbackComponent = /*#__PURE__*/(function () {\n  var OktaCallbackComponent = /*#__PURE__*/function () {\n    function OktaCallbackComponent(config, oktaAuth, injector) {\n      _classCallCheck(this, OktaCallbackComponent);\n\n      this.config = config;\n      this.oktaAuth = oktaAuth;\n      this.injector = injector;\n    }\n\n    _createClass(OktaCallbackComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var isInteractionRequiredError, _this$config, onAuthResume, onAuthRequired, callbackFn;\n\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.oktaAuth.handleLoginRedirect();\n\n              case 3:\n                _context.next = 15;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                // Callback from social IDP. Show custom login page to continue.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore Supports auth-js v5 & v6-7\n                isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n\n                if (!(isInteractionRequiredError(_context.t0) && this.injector)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _this$config = this.config, onAuthResume = _this$config.onAuthResume, onAuthRequired = _this$config.onAuthRequired;\n                callbackFn = onAuthResume || onAuthRequired;\n\n                if (!callbackFn) {\n                  _context.next = 14;\n                  break;\n                }\n\n                callbackFn(this.oktaAuth, this.injector);\n                return _context.abrupt(\"return\");\n\n              case 14:\n                this.error = _context.t0.toString();\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this, [[0, 5]]);\n        }));\n      }\n    }]);\n\n    return OktaCallbackComponent;\n  }();\n\n  OktaCallbackComponent.ɵfac = function OktaCallbackComponent_Factory(t) {\n    return new (t || OktaCallbackComponent)(i0.ɵɵdirectiveInject(OKTA_CONFIG), i0.ɵɵdirectiveInject(OKTA_AUTH), i0.ɵɵdirectiveInject(Injector, 8));\n  };\n\n  OktaCallbackComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OktaCallbackComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 2,\n    vars: 1,\n    template: function OktaCallbackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.error);\n      }\n    },\n    encapsulation: 2\n  });\n  return OktaCallbackComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar OktaAuthGuard = /*#__PURE__*/(function () {\n  var OktaAuthGuard = /*#__PURE__*/function () {\n    function OktaAuthGuard(config, oktaAuth, injector) {\n      var _this = this;\n\n      _classCallCheck(this, OktaAuthGuard);\n\n      this.config = config;\n      this.oktaAuth = oktaAuth;\n      this.injector = injector;\n\n      this.updateAuthStateListener = function (authState) {\n        if (!authState.isAuthenticated) {\n          _this.handleLogin(_this.state.url);\n        }\n      };\n\n      this.onAuthRequired = this.config.onAuthRequired; // Unsubscribe updateAuthStateListener when route change\n\n      var router = injector.get(Router);\n      router.events.pipe(filter(function (e) {\n        return e instanceof NavigationStart && _this.state && _this.state.url !== e.url;\n      })).subscribe(function () {\n        _this.oktaAuth.authStateManager.unsubscribe(_this.updateAuthStateListener);\n      });\n    }\n\n    _createClass(OktaAuthGuard, [{\n      key: \"canLoad\",\n      value: function canLoad(route) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var isAuthenticated, router, nav, originalUri;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n                _context2.next = 3;\n                return this.oktaAuth.isAuthenticated();\n\n              case 3:\n                isAuthenticated = _context2.sent;\n\n                if (!isAuthenticated) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", true);\n\n              case 6:\n                router = this.injector.get(Router);\n                nav = router.getCurrentNavigation();\n                originalUri = nav ? nav.extractedUrl.toString() : undefined;\n                _context2.next = 11;\n                return this.handleLogin(originalUri);\n\n              case 11:\n                return _context2.abrupt(\"return\", false);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n      }\n      /**\n       * Gateway for protected route. Returns true if there is a valid accessToken,\n       * otherwise it will cache the route and start the login flow.\n       * @param route\n       * @param state\n       */\n\n    }, {\n      key: \"canActivate\",\n      value: function canActivate(route, state) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var isAuthenticated;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                // Track states for current route\n                this.state = state;\n                this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired; // Protect the route after accessing\n\n                this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n                _context3.next = 5;\n                return this.oktaAuth.isAuthenticated();\n\n              case 5:\n                isAuthenticated = _context3.sent;\n\n                if (!isAuthenticated) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", true);\n\n              case 8:\n                _context3.next = 10;\n                return this.handleLogin(state.url);\n\n              case 10:\n                return _context3.abrupt(\"return\", false);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n      }\n    }, {\n      key: \"canActivateChild\",\n      value: function canActivateChild(route, state) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.canActivate(route, state));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n      }\n    }, {\n      key: \"handleLogin\",\n      value: function handleLogin(originalUri) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                // Store the current path\n                if (originalUri) {\n                  this.oktaAuth.setOriginalUri(originalUri);\n                }\n\n                if (this.onAuthRequired) {\n                  this.onAuthRequired(this.oktaAuth, this.injector);\n                } else {\n                  this.oktaAuth.signInWithRedirect();\n                }\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n      }\n    }]);\n\n    return OktaAuthGuard;\n  }();\n\n  OktaAuthGuard.ɵfac = function OktaAuthGuard_Factory(t) {\n    return new (t || OktaAuthGuard)(i0.ɵɵinject(OKTA_CONFIG), i0.ɵɵinject(OKTA_AUTH), i0.ɵɵinject(Injector));\n  };\n\n  OktaAuthGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OktaAuthGuard,\n    factory: OktaAuthGuard.ɵfac\n  });\n  return OktaAuthGuard;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar defaultAuthState = {\n  isAuthenticated: false\n};\nvar OktaAuthStateService = /*#__PURE__*/(function () {\n  var OktaAuthStateService = /*#__PURE__*/function () {\n    function OktaAuthStateService(oktaAuth) {\n      _classCallCheck(this, OktaAuthStateService);\n\n      this.oktaAuth = oktaAuth;\n      this._authState = new BehaviorSubject(defaultAuthState); // only expose readonly property\n\n      this.authState$ = this._authState.asObservable();\n      this.updateAuthState = this.updateAuthState.bind(this); // set initial authState\n\n      var initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n\n      this._authState.next(initialAuthState); // subscribe to future changes\n\n\n      this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n    }\n\n    _createClass(OktaAuthStateService, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n      } // Observes as true when any group input can match groups from user claims \n\n    }, {\n      key: \"hasAnyGroups\",\n      value: function hasAnyGroups(groups) {\n        var _this2 = this;\n\n        return this.authState$.pipe(mergeMap(function (_ref) {\n          var isAuthenticated = _ref.isAuthenticated,\n              idToken = _ref.idToken;\n          return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n            var key, value, userInfo;\n            return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n              while (1) switch (_context6.prev = _context6.next) {\n                case 0:\n                  if (!(!isAuthenticated || !idToken)) {\n                    _context6.next = 2;\n                    break;\n                  }\n\n                  return _context6.abrupt(\"return\", false);\n\n                case 2:\n                  // transform inputs to consistent object format\n                  if (typeof groups === 'string') {\n                    groups = {\n                      groups: [groups]\n                    };\n                  }\n\n                  if (Array.isArray(groups)) {\n                    groups = {\n                      groups: groups\n                    };\n                  }\n\n                  key = Object.keys(groups)[0];\n                  value = groups[key]; // groups or custom claims is available in idToken\n\n                  if (!idToken.claims[key]) {\n                    _context6.next = 8;\n                    break;\n                  }\n\n                  return _context6.abrupt(\"return\", value.some(function (authority) {\n                    return idToken.claims[key].includes(authority);\n                  }));\n\n                case 8:\n                  _context6.next = 10;\n                  return this.oktaAuth.getUser();\n\n                case 10:\n                  userInfo = _context6.sent;\n\n                  if (userInfo[key]) {\n                    _context6.next = 13;\n                    break;\n                  }\n\n                  return _context6.abrupt(\"return\", false);\n\n                case 13:\n                  return _context6.abrupt(\"return\", value.some(function (authority) {\n                    return userInfo[key].includes(authority);\n                  }));\n\n                case 14:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }, _callee6, this);\n          }));\n        }));\n      }\n    }, {\n      key: \"updateAuthState\",\n      value: function updateAuthState(authState) {\n        this._authState.next(authState);\n      }\n    }]);\n\n    return OktaAuthStateService;\n  }();\n\n  OktaAuthStateService.ɵfac = function OktaAuthStateService_Factory(t) {\n    return new (t || OktaAuthStateService)(i0.ɵɵinject(OKTA_AUTH));\n  };\n\n  OktaAuthStateService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OktaAuthStateService,\n    factory: OktaAuthStateService.ɵfac\n  });\n  return OktaAuthStateService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar OktaHasAnyGroupDirective = /*#__PURE__*/(function () {\n  var OktaHasAnyGroupDirective = /*#__PURE__*/function () {\n    function OktaHasAnyGroupDirective( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    templateRef, viewContainer, authStateService) {\n      _classCallCheck(this, OktaHasAnyGroupDirective);\n\n      this.templateRef = templateRef;\n      this.viewContainer = viewContainer;\n      this.authStateService = authStateService;\n    }\n\n    _createClass(OktaHasAnyGroupDirective, [{\n      key: \"oktaHasAnyGroup\",\n      set: function set(groups) {\n        var _this3 = this;\n\n        this.authStateService.hasAnyGroups(groups).subscribe(function (isAuthorized) {\n          // don't update UI if no state change\n          if (isAuthorized === _this3.previousIsAuthorized) {\n            return;\n          }\n\n          _this3.previousIsAuthorized = isAuthorized;\n\n          _this3.viewContainer.clear();\n\n          if (isAuthorized) {\n            _this3.viewContainer.createEmbeddedView(_this3.templateRef);\n          }\n        });\n      }\n    }]);\n\n    return OktaHasAnyGroupDirective;\n  }();\n\n  OktaHasAnyGroupDirective.ɵfac = function OktaHasAnyGroupDirective_Factory(t) {\n    return new (t || OktaHasAnyGroupDirective)(i0.ɵɵdirectiveInject(TemplateRef), i0.ɵɵdirectiveInject(ViewContainerRef), i0.ɵɵdirectiveInject(OktaAuthStateService));\n  };\n\n  OktaHasAnyGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: OktaHasAnyGroupDirective,\n    selectors: [[\"\", \"oktaHasAnyGroup\", \"\"]],\n    inputs: {\n      oktaHasAnyGroup: \"oktaHasAnyGroup\"\n    }\n  });\n  return OktaHasAnyGroupDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar packageInfo = {\n  'name': '@okta/okta-angular',\n  'version': '6.0.0',\n  'authJSMinSupportedVersion': '5.3.1'\n};\n\nfunction oktaAuthFactory(config) {\n  return config.oktaAuth;\n}\n\nvar OktaAuthModule = /*#__PURE__*/(function () {\n  var OktaAuthModule = /*#__PURE__*/_createClass(function OktaAuthModule(config, location, router) {\n    var _this4 = this;\n\n    _classCallCheck(this, OktaAuthModule);\n\n    var oktaAuth = config.oktaAuth;\n    var isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n\n    if (!isAuthJsSupported) {\n      throw new AuthSdkError(\"Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is \".concat(packageInfo.authJSMinSupportedVersion, \".\"));\n    } // Add Okta UA\n\n\n    oktaAuth._oktaUserAgent.addEnvironment(\"\".concat(packageInfo.name, \"/\").concat(packageInfo.version));\n\n    oktaAuth._oktaUserAgent.addEnvironment(\"Angular/\".concat(VERSION.full)); // Provide a default implementation of `restoreOriginalUri`\n\n\n    if (!oktaAuth.options.restoreOriginalUri && router && location) {\n      oktaAuth.options.restoreOriginalUri = function (_, originalUri) {\n        return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n          var baseUrl, routePath;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                baseUrl = window.location.origin + location.prepareExternalUrl('');\n                routePath = toRelativeUrl(originalUri || '/', baseUrl);\n                router.navigateByUrl(routePath);\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7);\n        }));\n      };\n    } // Start services\n\n\n    oktaAuth.start();\n  });\n\n  OktaAuthModule.ɵfac = function OktaAuthModule_Factory(t) {\n    return new (t || OktaAuthModule)(i0.ɵɵinject(OKTA_CONFIG), i0.ɵɵinject(Location, 8), i0.ɵɵinject(Router, 8));\n  };\n\n  OktaAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: OktaAuthModule\n  });\n  OktaAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [OktaAuthGuard, OktaAuthStateService, {\n      provide: OKTA_AUTH,\n      useFactory: oktaAuthFactory,\n      deps: [OKTA_CONFIG]\n    }]\n  });\n  return OktaAuthModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nexport { OKTA_AUTH, OKTA_CONFIG, OktaAuthGuard, OktaAuthModule, OktaAuthStateService, OktaCallbackComponent, OktaHasAnyGroupDirective }; //# sourceMappingURL=okta-angular.js.map","map":null,"metadata":{},"sourceType":"module"}