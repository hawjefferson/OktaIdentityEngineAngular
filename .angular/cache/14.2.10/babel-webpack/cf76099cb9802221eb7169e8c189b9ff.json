{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { OKTA_AUTH } from '@okta/okta-angular';\nimport sampleConfig from '../app.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@okta/okta-auth-js\";\n\nfunction MessagesComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6);\n    i0.ɵɵtext(3, \"Failed to fetch messages. Please verify the following:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 7)(5, \"li\", 5);\n    i0.ɵɵtext(6, \"You've downloaded one of our resource server examples, and it's running on port 8000.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"li\", 5);\n    i0.ɵɵtext(8, \"Your resource server example is using the same Okta authorization server (issuer) that you have configured this Angular application to use.\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\n\nfunction MessagesComponent_div_4_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 10)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"id\", \"message-\", message_r3.index, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.text);\n  }\n}\n\nfunction MessagesComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"This component makes a GET request to the resource server example, which must be running at \");\n    i0.ɵɵelementStart(3, \"code\");\n    i0.ɵɵtext(4, \"localhost:8000/api/messages\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \"It attaches your current access token in the \");\n    i0.ɵɵelementStart(7, \"code\");\n    i0.ɵɵtext(8, \"Authorization\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" header on the request, and the resource server will attempt to authenticate this access token. If the token is valid the server will return a list of messages. If the token is not valid or the resource server is incorrectly configured, you will see a 401 \");\n    i0.ɵɵelementStart(10, \"code\");\n    i0.ɵɵtext(11, \"Unauthorized response\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \".\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵtext(14, \"This route is protected with the \");\n    i0.ɵɵelementStart(15, \"code\");\n    i0.ɵɵtext(16, \"OktaAuthGuard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \" component, which will ensure that this page cannot be accessed until you have authenticated and have an access token in local storage.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"table\", 8)(19, \"thead\")(20, \"tr\")(21, \"th\");\n    i0.ɵɵtext(22, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"th\");\n    i0.ɵɵtext(24, \"Message\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"tbody\");\n    i0.ɵɵtemplate(26, MessagesComponent_div_4_tr_26_Template, 5, 3, \"tr\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(26);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nexport let MessagesComponent = /*#__PURE__*/(() => {\n  class MessagesComponent {\n    constructor(oktaAuth, http) {\n      this.oktaAuth = oktaAuth;\n      this.http = http;\n      this.failed = false;\n      this.messages = [];\n      this.messages = [];\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const accessToken = this.oktaAuth.getAccessToken();\n        this.http.get(sampleConfig.resourceServer.messagesUrl, {\n          headers: {\n            Authorization: 'Bearer ' + accessToken\n          }\n        }).subscribe(data => {\n          let index = 1;\n          const messages = data.messages.map(message => {\n            const date = new Date(message.date);\n            const day = date.toLocaleDateString();\n            const time = date.toLocaleTimeString();\n            return {\n              date: `${day} ${time}`,\n              text: message.text,\n              index: index++\n            };\n          });\n          [].push.apply(this.messages, messages);\n        }, err => {\n          console.error(err);\n          this.failed = true;\n        });\n      });\n    }\n\n  }\n\n  MessagesComponent.ɵfac = function MessagesComponent_Factory(t) {\n    return new (t || MessagesComponent)(i0.ɵɵdirectiveInject(OKTA_AUTH), i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  MessagesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessagesComponent,\n    selectors: [[\"app-messages\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"ui\", \"header\"], [\"aria-hidden\", \"true\", 1, \"mail\", \"outline\", \"icon\"], [\"class\", \"ui error message\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ui\", \"error\", \"message\"], [1, \"content\"], [1, \"header\"], [1, \"list\"], [1, \"ui\", \"table\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\"]],\n    template: function MessagesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵelement(1, \"i\", 1);\n        i0.ɵɵtext(2, \" My Messages\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, MessagesComponent_div_3_Template, 9, 0, \"div\", 2);\n        i0.ɵɵtemplate(4, MessagesComponent_div_4_Template, 27, 1, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.failed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.messages.length);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf]\n  });\n  return MessagesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}