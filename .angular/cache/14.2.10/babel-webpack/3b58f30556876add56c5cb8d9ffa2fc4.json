{"ast":null,"code":"import _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { isPromise } from './types.js';\nimport { warn } from './console.js';\n\nvar PromiseQueue = /*#__PURE__*/function () {\n  function PromiseQueue() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      quiet: false\n    };\n\n    _classCallCheck(this, PromiseQueue);\n\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  _createClass(PromiseQueue, [{\n    key: \"push\",\n    value: function push(method, thisObject) {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (_this.queue.length > 0) {\n          if (_this.options.quiet !== false) {\n            warn('Async method is being called but another async method is already running. ' + 'The new method will be delayed until the previous method completes.');\n          }\n        }\n\n        _this.queue.push({\n          method: method,\n          thisObject: thisObject,\n          args: args,\n          resolve: resolve,\n          reject: reject\n        });\n\n        _this.run();\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this2 = this;\n\n      if (this.running) {\n        return;\n      }\n\n      if (this.queue.length === 0) {\n        return;\n      }\n\n      this.running = true;\n      var queueItem = this.queue.shift();\n      var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n\n      if (isPromise(res)) {\n        res.then(queueItem.resolve, queueItem.reject).finally(function () {\n          _this2.running = false;\n\n          _this2.run();\n        });\n      } else {\n        queueItem.resolve(res);\n        this.running = false;\n        this.run();\n      }\n    }\n  }]);\n\n  return PromiseQueue;\n}();\n\nexport { PromiseQueue }; //# sourceMappingURL=PromiseQueue.js.map","map":null,"metadata":{},"sourceType":"module"}