{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Remediator.js';\nimport { getAuthenticatorFromRemediation } from '../util.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { findMatchedOption, compareAuthenticators } from '../../authenticator/util.js';\n\nvar SelectAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(SelectAuthenticator, _Remediator);\n\n  var _super = _createSuper(SelectAuthenticator);\n\n  function SelectAuthenticator() {\n    _classCallCheck(this, SelectAuthenticator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectAuthenticator, [{\n    key: \"findMatchedOption\",\n    value: function findMatchedOption(authenticators, options) {\n      var option;\n\n      var _iterator = _createForOfIteratorHelper(authenticators),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var authenticator = _step.value;\n          option = options.find(function (_ref) {\n            var relatesTo = _ref.relatesTo;\n            return relatesTo.key === authenticator.key;\n          });\n\n          if (option) {\n            return \"break\";\n          }\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _ret = _loop();\n\n          if (_ret === \"break\") break;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return option;\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this$values = this.values,\n          authenticators = _this$values.authenticators,\n          authenticator = _this$values.authenticator;\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = authenticatorFromRemediation.options;\n\n      if (!authenticators || !authenticators.length) {\n        return false;\n      }\n\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        return true;\n      }\n\n      var matchedOption = this.findMatchedOption(authenticators, options);\n\n      if (matchedOption) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator(remediationValue) {\n      var _this$values2 = this.values,\n          authenticators = _this$values2.authenticators,\n          authenticator = _this$values2.authenticator;\n\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        this.selectedAuthenticator = authenticator;\n        return authenticator;\n      }\n\n      var options = remediationValue.options;\n      var selectedOption = findMatchedOption(authenticators, options);\n      this.selectedAuthenticator = selectedOption.relatesTo;\n      this.selectedOption = selectedOption;\n      return {\n        id: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value.form.value.find(function (_ref2) {\n          var name = _ref2.name;\n          return name === 'id';\n        }).value\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator(remediation) {\n      var options = remediation.options.map(function (_ref3) {\n        var label = _ref3.label,\n            relatesTo = _ref3.relatesTo;\n        return {\n          label: label,\n          value: relatesTo.key\n        };\n      });\n      return {\n        name: 'authenticator',\n        type: 'string',\n        options: options\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _this = this;\n\n      this.values = _get(_getPrototypeOf(SelectAuthenticator.prototype), \"getValuesAfterProceed\", this).call(this);\n      var authenticators = this.values.authenticators.filter(function (authenticator) {\n        return compareAuthenticators(authenticator, _this.selectedAuthenticator) !== true;\n      });\n      return Object.assign(Object.assign({}, this.values), {\n        authenticators: authenticators\n      });\n    }\n  }]);\n\n  return SelectAuthenticator;\n}(Remediator);\n\nexport { SelectAuthenticator }; //# sourceMappingURL=SelectAuthenticator.js.map","map":null,"metadata":{},"sourceType":"module"}