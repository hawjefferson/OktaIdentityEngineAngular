{"ast":null,"code":"import _slicedToArray from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction unwrapFormValue(remediation) {\n  if (Array.isArray(remediation)) {\n    return remediation.map(function (item) {\n      if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n        return item;\n      }\n\n      return unwrapFormValue(item);\n    });\n  }\n\n  var res = {};\n\n  for (var _i = 0, _Object$entries = Object.entries(remediation); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      var formKeys = Object.keys(value);\n\n      if (['value', 'form'].includes(key) && formKeys.length === 1 && ['value', 'form'].includes(formKeys[0])) {\n        var unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          res[key] = value;\n        });\n      } else {\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      res[key] = value;\n    }\n  }\n\n  return res;\n}\n\nexport { unwrapFormValue }; //# sourceMappingURL=util.js.map","map":null,"metadata":{},"sourceType":"module"}