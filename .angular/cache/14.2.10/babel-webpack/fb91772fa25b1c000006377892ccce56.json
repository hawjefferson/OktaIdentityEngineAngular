{"ast":null,"code":"import _slicedToArray from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AutoRenewService } from '../../services/AutoRenewService.js';\nimport { SyncStorageService } from '../../services/SyncStorageService.js';\nimport { LeaderElectionService } from '../../services/LeaderElectionService.js';\nimport { removeNils } from '../../util/object.js';\nvar AUTO_RENEW = 'autoRenew';\nvar SYNC_STORAGE = 'syncStorage';\nvar LEADER_ELECTION = 'leaderElection';\nvar ServiceManager = /*#__PURE__*/(function () {\n  var ServiceManager = /*#__PURE__*/function () {\n    function ServiceManager(sdk) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, ServiceManager);\n\n      this.sdk = sdk;\n      this.onLeader = this.onLeader.bind(this);\n\n      var _sdk$tokenManager$get = sdk.tokenManager.getOptions(),\n          autoRenew = _sdk$tokenManager$get.autoRenew,\n          autoRemove = _sdk$tokenManager$get.autoRemove,\n          syncStorage = _sdk$tokenManager$get.syncStorage;\n\n      options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n      this.options = Object.assign({}, ServiceManager.defaultOptions, {\n        autoRenew: autoRenew,\n        autoRemove: autoRemove,\n        syncStorage: syncStorage\n      }, {\n        electionChannelName: \"\".concat(sdk.options.clientId, \"-election\"),\n        syncChannelName: \"\".concat(sdk.options.clientId, \"-sync\")\n      }, removeNils(options));\n      this.started = false;\n      this.services = new Map();\n      ServiceManager.knownServices.forEach(function (name) {\n        var svc = _this.createService(name);\n\n        if (svc) {\n          _this.services.set(name, svc);\n        }\n      });\n    }\n\n    _createClass(ServiceManager, [{\n      key: \"onLeader\",\n      value: function () {\n        var _onLeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.started) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.startServices();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n\n        function onLeader() {\n          return _onLeader.apply(this, arguments);\n        }\n\n        return onLeader;\n      }()\n    }, {\n      key: \"isLeader\",\n      value: function isLeader() {\n        var _a;\n\n        return (_a = this.getService(LEADER_ELECTION)) === null || _a === void 0 ? void 0 : _a.isLeader();\n      }\n    }, {\n      key: \"isLeaderRequired\",\n      value: function isLeaderRequired() {\n        return _toConsumableArray(this.services.values()).some(function (srv) {\n          return srv.canStart() && srv.requiresLeadership();\n        });\n      }\n    }, {\n      key: \"start\",\n      value: function () {\n        var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.started) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.next = 4;\n                return this.startServices();\n\n              case 4:\n                this.started = true;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n\n        function start() {\n          return _start.apply(this, arguments);\n        }\n\n        return start;\n      }()\n    }, {\n      key: \"stop\",\n      value: function () {\n        var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.stopServices();\n\n              case 2:\n                this.started = false;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n\n        function stop() {\n          return _stop.apply(this, arguments);\n        }\n\n        return stop;\n      }()\n    }, {\n      key: \"getService\",\n      value: function getService(name) {\n        return this.services.get(name);\n      }\n    }, {\n      key: \"startServices\",\n      value: function () {\n        var _startServices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var _iterator, _step, _step$value, name, srv;\n\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _iterator = _createForOfIteratorHelper(this.services.entries());\n                _context4.prev = 1;\n\n                _iterator.s();\n\n              case 3:\n                if ((_step = _iterator.n()).done) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _step$value = _slicedToArray(_step.value, 2), name = _step$value[0], srv = _step$value[1];\n\n                if (!this.canStartService(name, srv)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.next = 8;\n                return srv.start();\n\n              case 8:\n                _context4.next = 3;\n                break;\n\n              case 10:\n                _context4.next = 15;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](1);\n\n                _iterator.e(_context4.t0);\n\n              case 15:\n                _context4.prev = 15;\n\n                _iterator.f();\n\n                return _context4.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this, [[1, 12, 15, 18]]);\n        }));\n\n        function startServices() {\n          return _startServices.apply(this, arguments);\n        }\n\n        return startServices;\n      }()\n    }, {\n      key: \"stopServices\",\n      value: function () {\n        var _stopServices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          var _iterator2, _step2, srv;\n\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(this.services.values());\n                _context5.prev = 1;\n\n                _iterator2.s();\n\n              case 3:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                srv = _step2.value;\n                _context5.next = 7;\n                return srv.stop();\n\n              case 7:\n                _context5.next = 3;\n                break;\n\n              case 9:\n                _context5.next = 14;\n                break;\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                _iterator2.e(_context5.t0);\n\n              case 14:\n                _context5.prev = 14;\n\n                _iterator2.f();\n\n                return _context5.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this, [[1, 11, 14, 17]]);\n        }));\n\n        function stopServices() {\n          return _stopServices.apply(this, arguments);\n        }\n\n        return stopServices;\n      }()\n    }, {\n      key: \"canStartService\",\n      value: function canStartService(name, srv) {\n        var canStart = srv.canStart() && !srv.isStarted();\n\n        if (name === LEADER_ELECTION) {\n          canStart && (canStart = this.isLeaderRequired());\n        } else if (srv.requiresLeadership()) {\n          canStart && (canStart = this.isLeader());\n        }\n\n        return canStart;\n      }\n    }, {\n      key: \"createService\",\n      value: function createService(name) {\n        var tokenManager = this.sdk.tokenManager;\n        var service;\n\n        switch (name) {\n          case LEADER_ELECTION:\n            service = new LeaderElectionService(Object.assign(Object.assign({}, this.options), {\n              onLeader: this.onLeader\n            }));\n            break;\n\n          case AUTO_RENEW:\n            service = new AutoRenewService(tokenManager, Object.assign({}, this.options));\n            break;\n\n          case SYNC_STORAGE:\n            service = new SyncStorageService(tokenManager, Object.assign({}, this.options));\n            break;\n\n          default:\n            throw new Error(\"Unknown service \".concat(name));\n        }\n\n        return service;\n      }\n    }]);\n\n    return ServiceManager;\n  }();\n\n  ServiceManager.knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\n  ServiceManager.defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n  return ServiceManager;\n})();\nexport { ServiceManager }; //# sourceMappingURL=browser.js.map","map":null,"metadata":{},"sourceType":"module"}