{"ast":null,"code":"import _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { warn } from '../util/console.js';\nimport { isBrowser } from '../features.js';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { SavedObject } from '../storage/SavedObject.js';\nimport { createCoreStorageManager } from '../core/storage.js';\n\nfunction createIdxStorageManager() {\n  var CoreStorageManager = createCoreStorageManager();\n  return /*#__PURE__*/function (_CoreStorageManager) {\n    _inherits(IdxStorageManager, _CoreStorageManager);\n\n    var _super = _createSuper(IdxStorageManager);\n\n    function IdxStorageManager(storageManagerOptions, cookieOptions, storageUtil) {\n      _classCallCheck(this, IdxStorageManager);\n\n      return _super.call(this, storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    _createClass(IdxStorageManager, [{\n      key: \"getIdxResponseStorage\",\n      value: function getIdxResponseStorage(options) {\n        var storage;\n\n        if (isBrowser()) {\n          try {\n            storage = this.storageUtil.getStorageByType('memory', options);\n          } catch (e) {\n            warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n          }\n        } else {\n          var transactionStorage = this.getTransactionStorage(options);\n\n          if (transactionStorage) {\n            storage = {\n              getItem: function getItem(key) {\n                var transaction = transactionStorage.getStorage();\n\n                if (transaction && transaction[key]) {\n                  return transaction[key];\n                }\n\n                return null;\n              },\n              setItem: function setItem(key, val) {\n                var transaction = transactionStorage.getStorage();\n\n                if (!transaction) {\n                  throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n                }\n\n                transaction[key] = val;\n                transactionStorage.setStorage(transaction);\n              },\n              removeItem: function removeItem(key) {\n                var transaction = transactionStorage.getStorage();\n\n                if (!transaction) {\n                  return;\n                }\n\n                delete transaction[key];\n                transactionStorage.setStorage(transaction);\n              }\n            };\n          }\n        }\n\n        if (!storage) {\n          return null;\n        }\n\n        return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n      }\n    }]);\n\n    return IdxStorageManager;\n  }(CoreStorageManager);\n}\n\nexport { createIdxStorageManager }; //# sourceMappingURL=storage.js.map","map":null,"metadata":{},"sourceType":"module"}