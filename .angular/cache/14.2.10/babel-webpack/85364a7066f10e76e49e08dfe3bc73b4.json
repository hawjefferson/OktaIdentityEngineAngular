{"ast":null,"code":"import _toConsumableArray from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\nimport { OktaPassword } from '../authenticator/OktaPassword.js';\nimport '../types/api.js';\nvar EnrollProfile = /*#__PURE__*/(function () {\n  var EnrollProfile = /*#__PURE__*/function (_Remediator) {\n    _inherits(EnrollProfile, _Remediator);\n\n    var _super = _createSuper(EnrollProfile);\n\n    function EnrollProfile(remediation) {\n      var _this;\n\n      var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      _classCallCheck(this, EnrollProfile);\n\n      _this = _super.call(this, remediation, values, options);\n      _this.authenticator = null;\n\n      var credentials = _this.getCredentialsFromRemediation();\n\n      if (credentials) {\n        _this.authenticator = _this.authenticator = new OktaPassword({});\n      }\n\n      return _this;\n    }\n\n    _createClass(EnrollProfile, [{\n      key: \"canRemediate\",\n      value: function canRemediate() {\n        if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n          return false;\n        }\n\n        var userProfileFromValues = this.getData().userProfile;\n\n        if (!userProfileFromValues) {\n          return false;\n        }\n\n        var userProfileFromRemediation = this.remediation.value.find(function (_ref) {\n          var name = _ref.name;\n          return name === 'userProfile';\n        });\n        return userProfileFromRemediation.form.value.reduce(function (canRemediate, curr) {\n          if (curr.required) {\n            canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n          }\n\n          return canRemediate;\n        }, true);\n      }\n    }, {\n      key: \"getCredentialsFromRemediation\",\n      value: function getCredentialsFromRemediation() {\n        return this.remediation.value.find(function (_ref2) {\n          var name = _ref2.name;\n          return name === 'credentials';\n        });\n      }\n    }, {\n      key: \"mapUserProfile\",\n      value: function mapUserProfile(_ref3) {\n        var _this2 = this;\n\n        var profileAttributes = _ref3.form.value;\n        var attributeNames = profileAttributes.map(function (_ref4) {\n          var name = _ref4.name;\n          return name;\n        });\n        var data = attributeNames.reduce(function (attributeValues, attributeName) {\n          return _this2.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), _defineProperty({}, attributeName, _this2.values[attributeName])) : attributeValues;\n        }, {});\n\n        if (Object.keys(data).length === 0) {\n          return;\n        }\n\n        return data;\n      }\n    }, {\n      key: \"mapCredentials\",\n      value: function mapCredentials() {\n        var val = this.authenticator && this.authenticator.mapCredentials(this.values);\n\n        if (!val) {\n          return;\n        }\n\n        return val;\n      }\n    }, {\n      key: \"getInputUserProfile\",\n      value: function getInputUserProfile(input) {\n        return _toConsumableArray(input.form.value);\n      }\n    }, {\n      key: \"getInputCredentials\",\n      value: function getInputCredentials(input) {\n        return _toConsumableArray(input.form.value);\n      }\n    }, {\n      key: \"getErrorMessages\",\n      value: function getErrorMessages(errorRemediation) {\n        return errorRemediation.value[0].form.value.reduce(function (errors, field) {\n          if (field.messages) {\n            errors.push(field.messages.value[0].message);\n          }\n\n          return errors;\n        }, []);\n      }\n    }]);\n\n    return EnrollProfile;\n  }(Remediator);\n\n  EnrollProfile.remediationName = 'enroll-profile';\n  return EnrollProfile;\n})();\nexport { EnrollProfile }; //# sourceMappingURL=EnrollProfile.js.map","map":null,"metadata":{},"sourceType":"module"}