{"ast":null,"code":"import _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager.js';\nimport { TRANSACTION_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, ORIGINAL_URI_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport { SavedObject } from '../storage/SavedObject.js';\n\nfunction createOAuthStorageManager() {\n  return /*#__PURE__*/function (_BaseStorageManager) {\n    _inherits(OAuthStorageManager, _BaseStorageManager);\n\n    var _super = _createSuper(OAuthStorageManager);\n\n    function OAuthStorageManager(storageManagerOptions, cookieOptions, storageUtil) {\n      _classCallCheck(this, OAuthStorageManager);\n\n      return _super.call(this, storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    _createClass(OAuthStorageManager, [{\n      key: \"getTransactionStorage\",\n      value: function getTransactionStorage(options) {\n        options = this.getOptionsForSection('transaction', options);\n        logServerSideMemoryStorageWarning(options);\n        var storage = this.getStorage(options);\n        var storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n      }\n    }, {\n      key: \"getSharedTansactionStorage\",\n      value: function getSharedTansactionStorage(options) {\n        options = this.getOptionsForSection('shared-transaction', options);\n        logServerSideMemoryStorageWarning(options);\n        var storage = this.getStorage(options);\n        var storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n      }\n    }, {\n      key: \"getOriginalUriStorage\",\n      value: function getOriginalUriStorage(options) {\n        options = this.getOptionsForSection('original-uri', options);\n        logServerSideMemoryStorageWarning(options);\n        var storage = this.getStorage(options);\n        var storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n      }\n    }]);\n\n    return OAuthStorageManager;\n  }(BaseStorageManager);\n}\n\nexport { createOAuthStorageManager }; //# sourceMappingURL=storage.js.map","map":null,"metadata":{},"sourceType":"module"}