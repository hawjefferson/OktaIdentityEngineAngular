{"ast":null,"code":"import _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { createIdxAPI } from './factory/api.js';\nimport * as webauthn from './webauthn.js';\n\nfunction mixinIdx(Base) {\n  var _a;\n\n  return _a = /*#__PURE__*/function (_Base) {\n    _inherits(OktaAuthIdx, _Base);\n\n    var _super = _createSuper(OktaAuthIdx);\n\n    function OktaAuthIdx() {\n      var _this;\n\n      _classCallCheck(this, OktaAuthIdx);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.idx = createIdxAPI(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    return _createClass(OktaAuthIdx);\n  }(Base), _a.webauthn = webauthn, _a;\n}\n\nexport { mixinIdx }; //# sourceMappingURL=mixin.js.map","map":null,"metadata":{},"sourceType":"module"}