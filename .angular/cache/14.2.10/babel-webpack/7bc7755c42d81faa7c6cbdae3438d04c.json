{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { sendRequest } from './request.js';\n\nvar getProfile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(oktaAuth, options) {\n    var transaction;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return sendRequest(oktaAuth, {\n            url: '/idp/myaccount/profile',\n            method: 'GET',\n            accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n            transactionClassName: 'ProfileTransaction'\n          });\n\n        case 2:\n          transaction = _context.sent;\n          return _context.abrupt(\"return\", transaction);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function getProfile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar updateProfile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(oktaAuth, options) {\n    var payload, accessToken, transaction;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = options.payload, accessToken = options.accessToken;\n          _context2.next = 3;\n          return sendRequest(oktaAuth, {\n            url: '/idp/myaccount/profile',\n            method: 'PUT',\n            payload: payload,\n            accessToken: accessToken,\n            transactionClassName: 'ProfileTransaction'\n          });\n\n        case 3:\n          transaction = _context2.sent;\n          return _context2.abrupt(\"return\", transaction);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n\n  return function updateProfile(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getProfileSchema = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(oktaAuth, options) {\n    var transaction;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return sendRequest(oktaAuth, {\n            url: '/idp/myaccount/profile/schema',\n            method: 'GET',\n            accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n            transactionClassName: 'ProfileSchemaTransaction'\n          });\n\n        case 2:\n          transaction = _context3.sent;\n          return _context3.abrupt(\"return\", transaction);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n\n  return function getProfileSchema(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport { getProfile, getProfileSchema, updateProfile }; //# sourceMappingURL=profileApi.js.map","map":null,"metadata":{},"sourceType":"module"}