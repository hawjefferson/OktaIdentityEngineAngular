{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport OAuthError from '../errors/OAuthError.js';\n\nfunction handleInteractionCodeRedirect(_x, _x2) {\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\n\nfunction _handleInteractionCodeRedirect() {\n  _handleInteractionCodeRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient, url) {\n    var meta, codeVerifier, savedState, _URL, searchParams, state, interactionCode, error, _yield$authClient$tok, tokens;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          meta = authClient.transactionManager.load();\n\n          if (meta) {\n            _context.next = 3;\n            break;\n          }\n\n          throw new AuthSdkError('No transaction data was found in storage');\n\n        case 3:\n          codeVerifier = meta.codeVerifier, savedState = meta.state;\n          _URL = new URL(url), searchParams = _URL.searchParams;\n          state = searchParams.get('state');\n          interactionCode = searchParams.get('interaction_code');\n          error = searchParams.get('error');\n\n          if (!error) {\n            _context.next = 10;\n            break;\n          }\n\n          throw new OAuthError(error, searchParams.get('error_description'));\n\n        case 10:\n          if (!(state !== savedState)) {\n            _context.next = 12;\n            break;\n          }\n\n          throw new AuthSdkError('State in redirect uri does not match with transaction state');\n\n        case 12:\n          if (interactionCode) {\n            _context.next = 14;\n            break;\n          }\n\n          throw new AuthSdkError('Unable to parse interaction_code from the url');\n\n        case 14:\n          _context.next = 16;\n          return authClient.token.exchangeCodeForTokens({\n            interactionCode: interactionCode,\n            codeVerifier: codeVerifier\n          });\n\n        case 16:\n          _yield$authClient$tok = _context.sent;\n          tokens = _yield$authClient$tok.tokens;\n          authClient.tokenManager.setTokens(tokens);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\n\nexport { handleInteractionCodeRedirect }; //# sourceMappingURL=handleInteractionCodeRedirect.js.map","map":null,"metadata":{},"sourceType":"module"}