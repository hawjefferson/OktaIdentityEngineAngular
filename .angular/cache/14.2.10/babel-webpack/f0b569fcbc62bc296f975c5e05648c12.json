{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { getSavedTransactionMeta, createTransactionMeta, saveTransactionMeta } from './transactionMeta.js';\nimport { removeNils } from '../util/object.js';\nimport { getOAuthBaseUrl } from '../oidc/util/oauth.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nfunction getResponse(meta) {\n  return {\n    meta: meta,\n    interactionHandle: meta.interactionHandle,\n    state: meta.state\n  };\n}\n\nfunction interact(_x) {\n  return _interact.apply(this, arguments);\n}\n\nfunction _interact() {\n  _interact = _asyncToGenerator(function (authClient) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var meta, baseUrl, _meta, clientId, redirectUri, state, scopes, withCredentials, codeChallenge, codeChallengeMethod, activationToken, recoveryToken, maxAge, nonce, clientSecret, url, params, headers, resp, interactionHandle, newMeta;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = removeNils(options);\n            meta = getSavedTransactionMeta(authClient, options);\n\n            if (!(meta === null || meta === void 0 ? void 0 : meta.interactionHandle)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", getResponse(meta));\n\n          case 4:\n            _context.next = 6;\n            return createTransactionMeta(authClient, Object.assign(Object.assign({}, meta), options));\n\n          case 6:\n            meta = _context.sent;\n            baseUrl = getOAuthBaseUrl(authClient);\n            _meta = meta, clientId = _meta.clientId, redirectUri = _meta.redirectUri, state = _meta.state, scopes = _meta.scopes, withCredentials = _meta.withCredentials, codeChallenge = _meta.codeChallenge, codeChallengeMethod = _meta.codeChallengeMethod, activationToken = _meta.activationToken, recoveryToken = _meta.recoveryToken, maxAge = _meta.maxAge, nonce = _meta.nonce;\n            clientSecret = options.clientSecret || authClient.options.clientSecret;\n            withCredentials = withCredentials !== null && withCredentials !== void 0 ? withCredentials : true;\n            url = \"\".concat(baseUrl, \"/v1/interact\");\n            params = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n              client_id: clientId,\n              scope: scopes.join(' '),\n              redirect_uri: redirectUri,\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod,\n              state: state\n            }, activationToken && {\n              activation_token: activationToken\n            }), recoveryToken && {\n              recovery_token: recoveryToken\n            }), clientSecret && {\n              client_secret: clientSecret\n            }), maxAge && {\n              max_age: maxAge\n            }), nonce && {\n              nonce: nonce\n            });\n            headers = {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            };\n            _context.next = 16;\n            return httpRequest(authClient, {\n              method: 'POST',\n              url: url,\n              headers: headers,\n              withCredentials: withCredentials,\n              args: params\n            });\n\n          case 16:\n            resp = _context.sent;\n            interactionHandle = resp.interaction_handle;\n            newMeta = Object.assign(Object.assign({}, meta), {\n              interactionHandle: interactionHandle,\n              withCredentials: withCredentials,\n              state: state,\n              scopes: scopes,\n              recoveryToken: recoveryToken,\n              activationToken: activationToken\n            });\n            saveTransactionMeta(authClient, newMeta);\n            return _context.abrupt(\"return\", getResponse(newMeta));\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })();\n  });\n  return _interact.apply(this, arguments);\n}\n\nexport { interact }; //# sourceMappingURL=interact.js.map","map":null,"metadata":{},"sourceType":"module"}