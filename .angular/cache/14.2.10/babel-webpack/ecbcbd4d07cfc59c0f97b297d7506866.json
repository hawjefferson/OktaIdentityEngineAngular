{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { clone } from '../util/object.js';\nimport { createOAuthMeta } from './util/oauthMeta.js';\nimport { prepareTokenParams } from './util/prepareTokenParams.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\n\nfunction getWithRedirect(_x, _x2) {\n  return _getWithRedirect.apply(this, arguments);\n}\n\nfunction _getWithRedirect() {\n  _getWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, options) {\n    var tokenParams,\n        meta,\n        requestUrl,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(_args.length > 2)) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options')));\n\n        case 2:\n          options = clone(options) || {};\n          _context.next = 5;\n          return prepareTokenParams(sdk, options);\n\n        case 5:\n          tokenParams = _context.sent;\n          meta = createOAuthMeta(sdk, tokenParams);\n          requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n          sdk.transactionManager.save(meta);\n\n          sdk.token.getWithRedirect._setLocation(requestUrl);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getWithRedirect.apply(this, arguments);\n}\n\nexport { getWithRedirect }; //# sourceMappingURL=getWithRedirect.js.map","map":null,"metadata":{},"sourceType":"module"}