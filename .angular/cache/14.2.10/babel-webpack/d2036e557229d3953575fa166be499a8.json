{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { isFunction } from '../util/types.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport OAuthError from '../errors/OAuthError.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { isAccessToken, isIDToken } from './types/Token.js';\n\nfunction getUserInfo(_x, _x2, _x3) {\n  return _getUserInfo.apply(this, arguments);\n}\n\nfunction _getUserInfo() {\n  _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, accessTokenObject, idTokenObject) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (accessTokenObject) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 3;\n          return sdk.tokenManager.getTokens();\n\n        case 3:\n          accessTokenObject = _context.sent.accessToken;\n\n        case 4:\n          if (idTokenObject) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 7;\n          return sdk.tokenManager.getTokens();\n\n        case 7:\n          idTokenObject = _context.sent.idToken;\n\n        case 8:\n          if (!(!accessTokenObject || !isAccessToken(accessTokenObject))) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('getUserInfo requires an access token object')));\n\n        case 10:\n          if (!(!idTokenObject || !isIDToken(idTokenObject))) {\n            _context.next = 12;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('getUserInfo requires an ID token object')));\n\n        case 12:\n          return _context.abrupt(\"return\", httpRequest(sdk, {\n            url: accessTokenObject.userinfoUrl,\n            method: 'GET',\n            accessToken: accessTokenObject.accessToken\n          }).then(function (userInfo) {\n            if (userInfo.sub === idTokenObject.claims.sub) {\n              return userInfo;\n            }\n\n            return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n          }).catch(function (err) {\n            if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n              var authenticateHeader;\n\n              if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n                authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n              } else if (isFunction(err.xhr.getResponseHeader)) {\n                authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n              }\n\n              if (authenticateHeader) {\n                var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n                var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n                var error = errorMatches[1];\n                var errorDescription = errorDescriptionMatches[1];\n\n                if (error && errorDescription) {\n                  err = new OAuthError(error, errorDescription);\n                }\n              }\n            }\n\n            throw err;\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getUserInfo.apply(this, arguments);\n}\n\nexport { getUserInfo }; //# sourceMappingURL=getUserInfo.js.map","map":null,"metadata":{},"sourceType":"module"}