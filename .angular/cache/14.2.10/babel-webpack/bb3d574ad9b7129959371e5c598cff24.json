{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport CustomError from '../errors/CustomError.js';\nimport { urlParamsToObject } from '../oidc/util/urlParams.js';\n\nvar EmailVerifyCallbackError = /*#__PURE__*/function (_CustomError) {\n  _inherits(EmailVerifyCallbackError, _CustomError);\n\n  var _super = _createSuper(EmailVerifyCallbackError);\n\n  function EmailVerifyCallbackError(state, otp) {\n    var _this;\n\n    _classCallCheck(this, EmailVerifyCallbackError);\n\n    _this = _super.call(this, \"Enter the OTP code in the originating client: \".concat(otp));\n    _this.name = 'EmailVerifyCallbackError';\n    _this.state = state;\n    _this.otp = otp;\n    return _this;\n  }\n\n  return _createClass(EmailVerifyCallbackError);\n}(CustomError);\n\nfunction isEmailVerifyCallbackError(error) {\n  return error.name === 'EmailVerifyCallbackError';\n}\n\nfunction isEmailVerifyCallback(urlPath) {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\nfunction parseEmailVerifyCallback(urlPath) {\n  return urlParamsToObject(urlPath);\n}\n\nfunction handleEmailVerifyCallback(_x, _x2) {\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\n\nfunction _handleEmailVerifyCallback() {\n  _handleEmailVerifyCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient, search) {\n    var _parseEmailVerifyCall, state, otp;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!isEmailVerifyCallback(search)) {\n            _context.next = 9;\n            break;\n          }\n\n          _parseEmailVerifyCall = parseEmailVerifyCallback(search), state = _parseEmailVerifyCall.state, otp = _parseEmailVerifyCall.otp;\n\n          if (!authClient.idx.canProceed({\n            state: state\n          })) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return authClient.idx.proceed({\n            state: state,\n            otp: otp\n          });\n\n        case 5:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 8:\n          throw new EmailVerifyCallbackError(state, otp);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\n\nexport { EmailVerifyCallbackError, handleEmailVerifyCallback, isEmailVerifyCallback, isEmailVerifyCallbackError, parseEmailVerifyCallback }; //# sourceMappingURL=emailVerify.js.map","map":null,"metadata":{},"sourceType":"module"}