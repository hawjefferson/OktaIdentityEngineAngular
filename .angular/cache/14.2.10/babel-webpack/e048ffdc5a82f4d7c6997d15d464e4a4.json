{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { OKTA_AUTH } from '@okta/okta-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@okta/okta-auth-js\";\n\nfunction ProfileComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const claim_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(claim_r1.claim);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"claim-\", claim_r1.claim, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(claim_r1.value);\n  }\n}\n\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    constructor(oktaAuth) {\n      this.oktaAuth = oktaAuth;\n      this.claims = [];\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const userClaims = yield this.oktaAuth.getUser();\n        this.claims = Object.entries(userClaims).map(entry => ({\n          claim: entry[0],\n          value: entry[1]\n        }));\n      });\n    }\n\n  }\n\n  ProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n    return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(OKTA_AUTH));\n  };\n\n  ProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileComponent,\n    selectors: [[\"app-profile\"]],\n    decls: 22,\n    vars: 1,\n    consts: [[1, \"ui\", \"header\"], [\"aria-hidden\", \"true\", 1, \"drivers\", \"license\", \"outline\", \"icon\"], [\"href\", \"https://developer.okta.com/docs/guides/implement-auth-code-pkce\"], [1, \"ui\", \"table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"id\"]],\n    template: function ProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵelement(1, \"i\", 1);\n        i0.ɵɵtext(2, \" My User Profile (ID Token Claims)\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \" Below is the information from your ID Token which was obtained during the \");\n        i0.ɵɵelementStart(5, \"a\", 2);\n        i0.ɵɵtext(6, \"PKCE Flow\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \" and is now stored in local storage.\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \" This route is protected with the \");\n        i0.ɵɵelementStart(10, \"code\");\n        i0.ɵɵtext(11, \"OktaAuthGuard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12, \" component, which will ensure that this page cannot be accessed until you have authenticated.\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"table\", 3)(14, \"thead\")(15, \"tr\")(16, \"th\");\n        i0.ɵɵtext(17, \"Claim\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Value\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"tbody\");\n        i0.ɵɵtemplate(21, ProfileComponent_tr_21_Template, 5, 3, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.claims);\n      }\n    },\n    dependencies: [i1.NgForOf]\n  });\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}