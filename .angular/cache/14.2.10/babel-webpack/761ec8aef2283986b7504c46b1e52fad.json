{"ast":null,"code":"import _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { createTransactionManager } from '../oidc/TransactionManager.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\n\nfunction createIdxTransactionManager() {\n  var TransactionManager = createTransactionManager();\n  return /*#__PURE__*/function (_TransactionManager) {\n    _inherits(IdxTransactionManager, _TransactionManager);\n\n    var _super = _createSuper(IdxTransactionManager);\n\n    function IdxTransactionManager(options) {\n      _classCallCheck(this, IdxTransactionManager);\n\n      return _super.call(this, options);\n    }\n\n    _createClass(IdxTransactionManager, [{\n      key: \"clear\",\n      value: function clear() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _get(_getPrototypeOf(IdxTransactionManager.prototype), \"clear\", this).call(this, options);\n\n        if (options.clearIdxResponse !== false) {\n          this.clearIdxResponse();\n        }\n      }\n    }, {\n      key: \"saveIdxResponse\",\n      value: function saveIdxResponse(data) {\n        if (!this.saveLastResponse) {\n          return;\n        }\n\n        var storage = this.storageManager.getIdxResponseStorage();\n\n        if (!storage) {\n          return;\n        }\n\n        storage.setStorage(data);\n      }\n    }, {\n      key: \"loadIdxResponse\",\n      value: function loadIdxResponse(options) {\n        if (!this.saveLastResponse) {\n          return null;\n        }\n\n        var storage = this.storageManager.getIdxResponseStorage();\n\n        if (!storage) {\n          return null;\n        }\n\n        var storedValue = storage.getStorage();\n\n        if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n          return null;\n        }\n\n        if (options) {\n          var stateHandle = options.stateHandle,\n              interactionHandle = options.interactionHandle;\n\n          if (stateHandle && storedValue.stateHandle !== stateHandle) {\n            return null;\n          }\n\n          if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n            return null;\n          }\n        }\n\n        return storedValue;\n      }\n    }, {\n      key: \"clearIdxResponse\",\n      value: function clearIdxResponse() {\n        if (!this.saveLastResponse) {\n          return;\n        }\n\n        var storage = this.storageManager.getIdxResponseStorage();\n        storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n      }\n    }]);\n\n    return IdxTransactionManager;\n  }(TransactionManager);\n}\n\nexport { createIdxTransactionManager }; //# sourceMappingURL=IdxTransactionManager.js.map","map":null,"metadata":{},"sourceType":"module"}