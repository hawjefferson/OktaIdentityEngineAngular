{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __rest } from '../../_virtual/_tslib.js';\nimport * as index from '../../crypto/index.js';\nimport { httpRequest } from '../../http/request.js';\nimport { PromiseQueue } from '../../util/PromiseQueue.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport PKCE from '../util/pkce.js';\nimport { createTokenAPI } from '../factory/api.js';\nimport { TokenManager } from '../TokenManager.js';\nimport { getOAuthUrls } from '../util/oauth.js';\nimport { isLoginRedirect as _isLoginRedirect } from '../util/loginRedirect.js';\nimport { provideOriginalUri } from './browser.js';\n\nfunction mixinOAuth(Base, TransactionManagerConstructor) {\n  var _a;\n\n  var WithOriginalUri = provideOriginalUri(Base);\n  return _a = /*#__PURE__*/function (_WithOriginalUri) {\n    _inherits(OktaAuthOAuth, _WithOriginalUri);\n\n    var _super = _createSuper(OktaAuthOAuth);\n\n    function OktaAuthOAuth() {\n      var _this;\n\n      _classCallCheck(this, OktaAuthOAuth);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: _this.storageManager\n      }, _this.options.transactionManager));\n      _this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n      _this._pending = {\n        handleLogin: false\n      };\n      _this._tokenQueue = new PromiseQueue();\n      _this.token = createTokenAPI(_assertThisInitialized(_this), _this._tokenQueue);\n      _this.tokenManager = new TokenManager(_assertThisInitialized(_this), _this.options.tokenManager);\n      return _this;\n    }\n\n    _createClass(OktaAuthOAuth, [{\n      key: \"clearStorage\",\n      value: function clearStorage() {\n        _get(_getPrototypeOf(OktaAuthOAuth.prototype), \"clearStorage\", this).call(this);\n\n        this.tokenManager.clear();\n      }\n    }, {\n      key: \"isAuthenticated\",\n      value: function () {\n        var _isAuthenticated = _asyncToGenerator(function () {\n          var _this2 = this;\n\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var _this2$tokenManager$g, autoRenew, autoRemove, shouldRenew, shouldRemove, _this2$tokenManager$g2, accessToken, _this2$tokenManager$g3, idToken;\n\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _this2$tokenManager$g = _this2.tokenManager.getOptions(), autoRenew = _this2$tokenManager$g.autoRenew, autoRemove = _this2$tokenManager$g.autoRemove;\n                  shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n                  shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n                  _this2$tokenManager$g2 = _this2.tokenManager.getTokensSync(), accessToken = _this2$tokenManager$g2.accessToken;\n\n                  if (!(accessToken && _this2.tokenManager.hasExpired(accessToken))) {\n                    _context.next = 18;\n                    break;\n                  }\n\n                  accessToken = undefined;\n\n                  if (!shouldRenew) {\n                    _context.next = 17;\n                    break;\n                  }\n\n                  _context.prev = 7;\n                  _context.next = 10;\n                  return _this2.tokenManager.renew('accessToken');\n\n                case 10:\n                  accessToken = _context.sent;\n                  _context.next = 15;\n                  break;\n\n                case 13:\n                  _context.prev = 13;\n                  _context.t0 = _context[\"catch\"](7);\n\n                case 15:\n                  _context.next = 18;\n                  break;\n\n                case 17:\n                  if (shouldRemove) {\n                    _this2.tokenManager.remove('accessToken');\n                  }\n\n                case 18:\n                  _this2$tokenManager$g3 = _this2.tokenManager.getTokensSync(), idToken = _this2$tokenManager$g3.idToken;\n\n                  if (!(idToken && _this2.tokenManager.hasExpired(idToken))) {\n                    _context.next = 33;\n                    break;\n                  }\n\n                  idToken = undefined;\n\n                  if (!shouldRenew) {\n                    _context.next = 32;\n                    break;\n                  }\n\n                  _context.prev = 22;\n                  _context.next = 25;\n                  return _this2.tokenManager.renew('idToken');\n\n                case 25:\n                  idToken = _context.sent;\n                  _context.next = 30;\n                  break;\n\n                case 28:\n                  _context.prev = 28;\n                  _context.t1 = _context[\"catch\"](22);\n\n                case 30:\n                  _context.next = 33;\n                  break;\n\n                case 32:\n                  if (shouldRemove) {\n                    _this2.tokenManager.remove('idToken');\n                  }\n\n                case 33:\n                  return _context.abrupt(\"return\", !!(accessToken && idToken));\n\n                case 34:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee, null, [[7, 13], [22, 28]]);\n          })();\n        });\n\n        function isAuthenticated() {\n          return _isAuthenticated.apply(this, arguments);\n        }\n\n        return isAuthenticated;\n      }()\n    }, {\n      key: \"signInWithRedirect\",\n      value: function () {\n        var _signInWithRedirect = _asyncToGenerator(function () {\n          var _this3 = this;\n\n          var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            var originalUri, additionalParams, params;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  originalUri = opts.originalUri, additionalParams = __rest(opts, [\"originalUri\"]);\n\n                  if (!_this3._pending.handleLogin) {\n                    _context2.next = 3;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\");\n\n                case 3:\n                  _this3._pending.handleLogin = true;\n                  _context2.prev = 4;\n\n                  if (originalUri) {\n                    _this3.setOriginalUri(originalUri);\n                  }\n\n                  params = Object.assign({\n                    scopes: _this3.options.scopes || ['openid', 'email', 'profile']\n                  }, additionalParams);\n                  _context2.next = 9;\n                  return _this3.token.getWithRedirect(params);\n\n                case 9:\n                  _context2.prev = 9;\n                  _this3._pending.handleLogin = false;\n                  return _context2.finish(9);\n\n                case 12:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2, null, [[4,, 9, 12]]);\n          })();\n        });\n\n        function signInWithRedirect() {\n          return _signInWithRedirect.apply(this, arguments);\n        }\n\n        return signInWithRedirect;\n      }()\n    }, {\n      key: \"getUser\",\n      value: function () {\n        var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var _this$tokenManager$ge, idToken, accessToken;\n\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$tokenManager$ge = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge.idToken, accessToken = _this$tokenManager$ge.accessToken;\n                return _context3.abrupt(\"return\", this.token.getUserInfo(accessToken, idToken));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, this);\n        }));\n\n        function getUser() {\n          return _getUser.apply(this, arguments);\n        }\n\n        return getUser;\n      }()\n    }, {\n      key: \"getIdToken\",\n      value: function getIdToken() {\n        var _this$tokenManager$ge2 = this.tokenManager.getTokensSync(),\n            idToken = _this$tokenManager$ge2.idToken;\n\n        return idToken ? idToken.idToken : undefined;\n      }\n    }, {\n      key: \"getAccessToken\",\n      value: function getAccessToken() {\n        var _this$tokenManager$ge3 = this.tokenManager.getTokensSync(),\n            accessToken = _this$tokenManager$ge3.accessToken;\n\n        return accessToken ? accessToken.accessToken : undefined;\n      }\n    }, {\n      key: \"getRefreshToken\",\n      value: function getRefreshToken() {\n        var _this$tokenManager$ge4 = this.tokenManager.getTokensSync(),\n            refreshToken = _this$tokenManager$ge4.refreshToken;\n\n        return refreshToken ? refreshToken.refreshToken : undefined;\n      }\n    }, {\n      key: \"storeTokensFromRedirect\",\n      value: function () {\n        var _storeTokensFromRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var _yield$this$token$par, tokens;\n\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.token.parseFromUrl();\n\n              case 2:\n                _yield$this$token$par = _context4.sent;\n                tokens = _yield$this$token$par.tokens;\n                this.tokenManager.setTokens(tokens);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, this);\n        }));\n\n        function storeTokensFromRedirect() {\n          return _storeTokensFromRedirect.apply(this, arguments);\n        }\n\n        return storeTokensFromRedirect;\n      }()\n    }, {\n      key: \"isLoginRedirect\",\n      value: function isLoginRedirect() {\n        return _isLoginRedirect(this);\n      }\n    }, {\n      key: \"isPKCE\",\n      value: function isPKCE() {\n        return !!this.options.pkce;\n      }\n    }, {\n      key: \"hasResponseType\",\n      value: function hasResponseType(responseType) {\n        var hasResponseType = false;\n\n        if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n          hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n        } else {\n          hasResponseType = this.options.responseType === responseType;\n        }\n\n        return hasResponseType;\n      }\n    }, {\n      key: \"isAuthorizationCodeFlow\",\n      value: function isAuthorizationCodeFlow() {\n        return this.hasResponseType('code');\n      }\n    }, {\n      key: \"invokeApiMethod\",\n      value: function () {\n        var _invokeApiMethod = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(options) {\n          var accessToken;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                if (options.accessToken) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                accessToken = _context5.sent.accessToken;\n                options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n\n              case 5:\n                return _context5.abrupt(\"return\", httpRequest(this, options));\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5, this);\n        }));\n\n        function invokeApiMethod(_x) {\n          return _invokeApiMethod.apply(this, arguments);\n        }\n\n        return invokeApiMethod;\n      }()\n    }, {\n      key: \"revokeAccessToken\",\n      value: function () {\n        var _revokeAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(accessToken) {\n          var accessTokenKey;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                if (accessToken) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                _context6.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                accessToken = _context6.sent.accessToken;\n                accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n                this.tokenManager.remove(accessTokenKey);\n\n              case 6:\n                if (accessToken) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", Promise.resolve(null));\n\n              case 8:\n                return _context6.abrupt(\"return\", this.token.revoke(accessToken));\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6, this);\n        }));\n\n        function revokeAccessToken(_x2) {\n          return _revokeAccessToken.apply(this, arguments);\n        }\n\n        return revokeAccessToken;\n      }()\n    }, {\n      key: \"revokeRefreshToken\",\n      value: function () {\n        var _revokeRefreshToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(refreshToken) {\n          var refreshTokenKey;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                if (refreshToken) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                _context7.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                refreshToken = _context7.sent.refreshToken;\n                refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n                this.tokenManager.remove(refreshTokenKey);\n\n              case 6:\n                if (refreshToken) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", Promise.resolve(null));\n\n              case 8:\n                return _context7.abrupt(\"return\", this.token.revoke(refreshToken));\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7, this);\n        }));\n\n        function revokeRefreshToken(_x3) {\n          return _revokeRefreshToken.apply(this, arguments);\n        }\n\n        return revokeRefreshToken;\n      }()\n    }, {\n      key: \"getSignOutRedirectUrl\",\n      value: function getSignOutRedirectUrl() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var idToken = options.idToken,\n            postLogoutRedirectUri = options.postLogoutRedirectUri,\n            state = options.state;\n\n        if (!idToken) {\n          idToken = this.tokenManager.getTokensSync().idToken;\n        }\n\n        if (!idToken) {\n          return '';\n        }\n\n        if (!postLogoutRedirectUri) {\n          postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n        }\n\n        var logoutUrl = getOAuthUrls(this).logoutUrl;\n        var idTokenHint = idToken.idToken;\n        var logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n\n        if (postLogoutRedirectUri) {\n          logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n        }\n\n        if (state) {\n          logoutUri += '&state=' + encodeURIComponent(state);\n        }\n\n        return logoutUri;\n      }\n    }, {\n      key: \"signOut\",\n      value: function () {\n        var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(options) {\n          var defaultUri, currentUri, postLogoutRedirectUri, accessToken, refreshToken, revokeAccessToken, revokeRefreshToken, logoutUri;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                options = Object.assign({}, options);\n                defaultUri = window.location.origin;\n                currentUri = window.location.href;\n                postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri || defaultUri;\n                accessToken = options.accessToken;\n                refreshToken = options.refreshToken;\n                revokeAccessToken = options.revokeAccessToken !== false;\n                revokeRefreshToken = options.revokeRefreshToken !== false;\n\n                if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n                  refreshToken = this.tokenManager.getTokensSync().refreshToken;\n                }\n\n                if (revokeAccessToken && typeof accessToken === 'undefined') {\n                  accessToken = this.tokenManager.getTokensSync().accessToken;\n                }\n\n                if (!options.idToken) {\n                  options.idToken = this.tokenManager.getTokensSync().idToken;\n                }\n\n                if (!(revokeRefreshToken && refreshToken)) {\n                  _context8.next = 14;\n                  break;\n                }\n\n                _context8.next = 14;\n                return this.revokeRefreshToken(refreshToken);\n\n              case 14:\n                if (!(revokeAccessToken && accessToken)) {\n                  _context8.next = 17;\n                  break;\n                }\n\n                _context8.next = 17;\n                return this.revokeAccessToken(accessToken);\n\n              case 17:\n                logoutUri = this.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), {\n                  postLogoutRedirectUri: postLogoutRedirectUri\n                }));\n\n                if (logoutUri) {\n                  _context8.next = 22;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.closeSession().then(function () {\n                  if (postLogoutRedirectUri === currentUri) {\n                    window.location.reload();\n                  } else {\n                    window.location.assign(postLogoutRedirectUri);\n                  }\n                }));\n\n              case 22:\n                if (options.clearTokensBeforeRedirect) {\n                  this.tokenManager.clear();\n                } else {\n                  this.tokenManager.addPendingRemoveFlags();\n                }\n\n                window.location.assign(logoutUri);\n\n              case 24:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8, this);\n        }));\n\n        function signOut(_x4) {\n          return _signOut.apply(this, arguments);\n        }\n\n        return signOut;\n      }()\n    }]);\n\n    return OktaAuthOAuth;\n  }(WithOriginalUri), _a.crypto = index, _a;\n}\n\nexport { mixinOAuth }; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module"}