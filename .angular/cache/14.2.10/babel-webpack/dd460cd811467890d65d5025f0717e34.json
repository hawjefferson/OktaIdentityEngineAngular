{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __rest } from '../../../_virtual/_tslib.js';\nimport { Remediator } from '../Base/Remediator.js';\nimport { unwrapFormValue } from './util.js';\n\nvar GenericRemediator = /*#__PURE__*/function (_Remediator) {\n  _inherits(GenericRemediator, _Remediator);\n\n  var _super = _createSuper(GenericRemediator);\n\n  function GenericRemediator() {\n    _classCallCheck(this, GenericRemediator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GenericRemediator, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      if (typeof this.remediation.action !== 'function') {\n        return false;\n      }\n\n      if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n        return true;\n      }\n\n      if (this.options.step) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this = this;\n\n      var data = this.getInputs().reduce(function (acc, _ref) {\n        var name = _ref.name;\n        acc[name] = _this.values[name];\n        return acc;\n      }, {});\n      return data;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(authClient, _context) {\n      var name = this.getName();\n      var inputs = this.getInputs();\n\n      var _a = this.remediation,\n          href = _a.href,\n          method = _a.method,\n          rel = _a.rel,\n          accepts = _a.accepts,\n          produces = _a.produces,\n          value = _a.value,\n          action = _a.action,\n          rest = __rest(_a, [\"href\", \"method\", \"rel\", \"accepts\", \"produces\", \"value\", \"action\"]);\n\n      if (action) {\n        return Object.assign(Object.assign(Object.assign({}, rest), !!inputs.length && {\n          inputs: inputs\n        }), {\n          action: function () {\n            var _action = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n              return _regeneratorRuntime().wrap(function _callee$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    return _context2.abrupt(\"return\", authClient.idx.proceed(Object.assign({\n                      step: name\n                    }, params)));\n\n                  case 1:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee);\n            }));\n\n            function action(_x) {\n              return _action.apply(this, arguments);\n            }\n\n            return action;\n          }()\n        });\n      }\n\n      return Object.assign({}, this.remediation);\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      return (this.remediation.value || []).filter(function (_ref2) {\n        var name = _ref2.name;\n        return name !== 'stateHandle';\n      }).map(unwrapFormValue).map(function (input) {\n        input.type = input.type || 'string';\n        return input;\n      });\n    }\n  }]);\n\n  return GenericRemediator;\n}(Remediator);\n\nexport { GenericRemediator }; //# sourceMappingURL=GenericRemediator.js.map","map":null,"metadata":{},"sourceType":"module"}