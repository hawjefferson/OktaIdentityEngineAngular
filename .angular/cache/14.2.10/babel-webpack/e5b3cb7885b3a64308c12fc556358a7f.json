{"ast":null,"code":"import _classCallCheck from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { OktaUserAgent } from './OktaUserAgent.js';\nimport { setRequestHeader } from './headers.js';\nimport { toQueryString } from '../util/url.js';\nimport { get } from './request.js';\n\nfunction mixinHttp(Base) {\n  return /*#__PURE__*/function (_Base) {\n    _inherits(OktaAuthHttp, _Base);\n\n    var _super = _createSuper(OktaAuthHttp);\n\n    function OktaAuthHttp() {\n      var _this;\n\n      _classCallCheck(this, OktaAuthHttp);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._oktaUserAgent = new OktaUserAgent();\n      _this.http = {\n        setRequestHeader: setRequestHeader.bind(null, _assertThisInitialized(_this))\n      };\n      return _this;\n    }\n\n    _createClass(OktaAuthHttp, [{\n      key: \"setHeaders\",\n      value: function setHeaders(headers) {\n        this.options.headers = Object.assign({}, this.options.headers, headers);\n      }\n    }, {\n      key: \"getIssuerOrigin\",\n      value: function getIssuerOrigin() {\n        return this.options.issuer.split('/oauth2/')[0];\n      }\n    }, {\n      key: \"webfinger\",\n      value: function webfinger(opts) {\n        var url = '/.well-known/webfinger' + toQueryString(opts);\n        var options = {\n          headers: {\n            'Accept': 'application/jrd+json'\n          }\n        };\n        return get(this, url, options);\n      }\n    }]);\n\n    return OktaAuthHttp;\n  }(Base);\n}\n\nexport { mixinHttp }; //# sourceMappingURL=mixin.js.map","map":null,"metadata":{},"sourceType":"module"}