{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/jeffersonhaw/Documents/CebPacAngular/samples-js-angular/okta-hosted-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport ProfileTransaction from './transactions/ProfileTransaction.js';\nimport ProfileSchemaTransaction from './transactions/ProfileSchemaTransaction.js';\nimport EmailTransaction from './transactions/EmailTransaction.js';\nimport EmailStatusTransaction from './transactions/EmailStatusTransaction.js';\nimport EmailChallengeTransaction from './transactions/EmailChallengeTransaction.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport BaseTransaction from './transactions/Base.js';\nimport AuthApiError from '../errors/AuthApiError.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nvar parseInsufficientAuthenticationError = function parseInsufficientAuthenticationError(header) {\n  if (!header) {\n    throw new AuthSdkError('Missing header string');\n  }\n\n  return header.split(',').map(function (part) {\n    return part.trim();\n  }).map(function (part) {\n    return part.split('=');\n  }).reduce(function (acc, curr) {\n    acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n    return acc;\n  }, {});\n};\n\nfunction sendRequest(_x, _x2) {\n  return _sendRequest.apply(this, arguments);\n}\n\nfunction _sendRequest() {\n  _sendRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(oktaAuth, options) {\n    var _a, _b, _oktaAuth$tokenManage, accessTokenObj, idTokenObj, idToken, accessToken, issuer, url, method, payload, requestUrl, res, errorResp, _parseInsufficientAut, error, error_description, max_age, insufficientAuthenticationError, map, TransactionClass;\n\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _oktaAuth$tokenManage = oktaAuth.tokenManager.getTokensSync(), accessTokenObj = _oktaAuth$tokenManage.accessToken, idTokenObj = _oktaAuth$tokenManage.idToken;\n          idToken = idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.idToken;\n          accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n          issuer = oktaAuth.options.issuer;\n          url = options.url, method = options.method, payload = options.payload;\n          requestUrl = url.startsWith(issuer) ? url : \"\".concat(issuer).concat(url);\n\n          if (accessToken) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n\n        case 8:\n          _context3.prev = 8;\n          _context3.next = 11;\n          return httpRequest(oktaAuth, Object.assign({\n            headers: {\n              'Accept': '*/*;okta-version=1.0.0'\n            },\n            accessToken: accessToken,\n            url: requestUrl,\n            method: method\n          }, payload && {\n            args: payload\n          }));\n\n        case 11:\n          res = _context3.sent;\n          _context3.next = 28;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](8);\n          errorResp = _context3.t0.xhr;\n\n          if (!(idToken && (errorResp === null || errorResp === void 0 ? void 0 : errorResp.status) === 403 && !!((_a = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _a === void 0 ? void 0 : _a['www-authenticate']))) {\n            _context3.next = 27;\n            break;\n          }\n\n          _parseInsufficientAut = parseInsufficientAuthenticationError((_b = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _b === void 0 ? void 0 : _b['www-authenticate']), error = _parseInsufficientAut.error, error_description = _parseInsufficientAut.error_description, max_age = _parseInsufficientAut.max_age;\n\n          if (!(error === 'insufficient_authentication_context')) {\n            _context3.next = 24;\n            break;\n          }\n\n          insufficientAuthenticationError = new AuthApiError({\n            errorSummary: error,\n            errorCauses: [{\n              errorSummary: error_description\n            }]\n          }, errorResp, {\n            max_age: +max_age\n          });\n          throw insufficientAuthenticationError;\n\n        case 24:\n          throw _context3.t0;\n\n        case 25:\n          _context3.next = 28;\n          break;\n\n        case 27:\n          throw _context3.t0;\n\n        case 28:\n          map = {\n            EmailTransaction: EmailTransaction,\n            EmailStatusTransaction: EmailStatusTransaction,\n            EmailChallengeTransaction: EmailChallengeTransaction,\n            ProfileTransaction: ProfileTransaction,\n            ProfileSchemaTransaction: ProfileSchemaTransaction,\n            PhoneTransaction: PhoneTransaction\n          };\n          TransactionClass = map[options.transactionClassName] || BaseTransaction;\n\n          if (!Array.isArray(res)) {\n            _context3.next = 32;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", res.map(function (item) {\n            return new TransactionClass(oktaAuth, {\n              res: item,\n              accessToken: accessToken\n            });\n          }));\n\n        case 32:\n          return _context3.abrupt(\"return\", new TransactionClass(oktaAuth, {\n            res: res,\n            accessToken: accessToken\n          }));\n\n        case 33:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[8, 14]]);\n  }));\n  return _sendRequest.apply(this, arguments);\n}\n\nfunction generateRequestFnFromLinks(_ref) {\n  var oktaAuth = _ref.oktaAuth,\n      accessToken = _ref.accessToken,\n      methodName = _ref.methodName,\n      links = _ref.links,\n      transactionClassName = _ref.transactionClassName;\n\n  var _loop = function _loop() {\n    var method = _arr[_i];\n\n    if (method.toLowerCase() === methodName) {\n      var _link = links.self;\n      return {\n        v: function () {\n          var _v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(payload) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", sendRequest(oktaAuth, {\n                    accessToken: accessToken,\n                    url: _link.href,\n                    method: method,\n                    payload: payload,\n                    transactionClassName: transactionClassName\n                  }));\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n\n          function v(_x3) {\n            return _v.apply(this, arguments);\n          }\n\n          return v;\n        }()\n      };\n    }\n  };\n\n  for (var _i = 0, _arr = ['GET', 'POST', 'PUT', 'DELETE']; _i < _arr.length; _i++) {\n    var _ret = _loop();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n\n  var link = links[methodName];\n\n  if (!link) {\n    throw new AuthSdkError(\"No link is found with methodName: \".concat(methodName));\n  }\n\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", sendRequest(oktaAuth, {\n              accessToken: accessToken,\n              url: link.href,\n              method: link.hints.allow[0],\n              payload: payload,\n              transactionClassName: transactionClassName\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nexport { generateRequestFnFromLinks, sendRequest }; //# sourceMappingURL=request.js.map","map":null,"metadata":{},"sourceType":"module"}